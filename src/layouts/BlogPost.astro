---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import GoogleAnalytics from "../components/GoogleAnalytics.astro";
import Mathjax from "../components/Mathjax.astro";
import FooterCTA from "../components/FooterCTA.astro";
import { EMAIL } from "../consts";
import "../styles/global.css";

import type { CollectionEntry } from "astro:content";
import { Image, getImage } from 'astro:assets';

type Props = CollectionEntry<"blog">["data"];

const images = import.meta.glob('../blog/**/*.{jpeg,jpg,png,svg}');

const fetchImg = (slug, heroImage) : any => {
  return images[`../blog/${slug}/${heroImage}`]()
}

const { data, slug, next, prev } = Astro.props;

const {title, description, pubDate, updatedDate, heroImage, tags} = data

const thumbnail = await getImage({src: fetchImg(slug, heroImage), format: 'avif'});
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={thumbnail.src} type="article" />
    <GoogleAnalytics />
    <Mathjax />

    <!--
      Article Specific Meta Tags
     -->
    <meta name="article:published_time" content={pubDate} />
    {updatedDate && <meta name="article:modified_time" content={updatedDate} />}
    <meta name="article:author" content="William Kaiser" />
    <meta name="article:section" content="Technology" />
    {tags && tags.map((tag) => (
      <meta name="article:tag" content={tag} />
    ))}
  </head>

  <body class="flex items-center w-scpen">
    <main class="std-main w-screen">
      <div class="mx-auto mt-5 max-w-prose p-2">
      <Header /> 
      </div>
     <article class="mx-auto mt-5 max-w-prose p-2">
        {heroImage && <div class="aspect-w-3 aspect-h-2">
            <Image class="h-full w-full rounded-lg object-cover object-center rounded-md shadow-xl" width={128 * 9} src={fetchImg(slug, heroImage)} alt="header image" format="avif" />
          </div>}

        <h1 class="text-center text-xl lg:text-5xl tracking-tight font-bold">{title}</h1>
        <p class="mt-2 text-center text-sm">Published on <FormattedDate date={pubDate} /></p>
        {
          updatedDate && (
            <div class="last-updated-on">
              Last updated on <FormattedDate date={updatedDate} />
            </div>
          )
        }
        <hr />
        <div class="prose prose-slate prose-md lg:prose-lg prose-img:rounded-lg p-2">
          <slot />
        </div>
      </article>

      <hr class="mt-4" />

      <section class="grid md:grid-cols-2 my-4">
        {
          prev && (
            <a
              href={`/blog/${prev.slug}`}
              class="rounded-md border-black border-2 p-2 m-2 hover:left-1"
            >
              <header class="text-gray-500">Previous post</header>
              <h1 class="font-bold">{prev.data.title}</h1>
            </a>
          )
        }

        {
          next && (
            <a
              href={`/blog/${next.slug}`}
              class="text-right md:col-start-2 rounded-md border-black border-2 p-2 m-2 hover:right-1"
            >
              <header class="text-gray-500">Next post</header>
              <h1 class="font-bold">{next.data.title}</h1>
            </a>
          )
        }
      </section>

      <hr />
      <section class="mb-8 grid md:grid-cols-2">
        <FooterCTA
          title="Stay in touch"
          description="Subscribe to my RSS feed to stay updated"
          href="/feed.rss"
          cta="RSS"
        />
        <FooterCTA
          title="Have any questions"
          description="Feel free to contact me! I will answer any and all inquires"
          href={`mailto:${EMAIL}`}
          cta="Email"
        />
      </section>
      <Footer />
    </main>
  </body>
</html>
